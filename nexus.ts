/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as Context from "./src/context"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BankAccountCreateInput: { // input type
    Bank: NexusGenInputs['BankCreateOneWithoutBankAccountInput']; // BankCreateOneWithoutBankAccountInput!
    ListBankAcc?: NexusGenInputs['RegisterCreateManyWithoutBankAccountInput'] | null; // RegisterCreateManyWithoutBankAccountInput
    bankName: string; // String!
    number: string; // String!
  }
  BankAccountCreateOneWithoutListBankAccInput: { // input type
    connect?: NexusGenInputs['BankAccountWhereUniqueInput'] | null; // BankAccountWhereUniqueInput
    connectOrCreate?: NexusGenInputs['BankAccountCreateOrConnectWithoutListBankAccInput'] | null; // BankAccountCreateOrConnectWithoutListBankAccInput
    create?: NexusGenInputs['BankAccountCreateWithoutListBankAccInput'] | null; // BankAccountCreateWithoutListBankAccInput
  }
  BankAccountCreateOrConnectWithoutListBankAccInput: { // input type
    create: NexusGenInputs['BankAccountCreateWithoutListBankAccInput']; // BankAccountCreateWithoutListBankAccInput!
    where: NexusGenInputs['BankAccountWhereUniqueInput']; // BankAccountWhereUniqueInput!
  }
  BankAccountCreateWithoutListBankAccInput: { // input type
    Bank: NexusGenInputs['BankCreateOneWithoutBankAccountInput']; // BankCreateOneWithoutBankAccountInput!
    bankName: string; // String!
    number: string; // String!
  }
  BankAccountListRelationFilter: { // input type
    every?: NexusGenInputs['BankAccountWhereInput'] | null; // BankAccountWhereInput
    none?: NexusGenInputs['BankAccountWhereInput'] | null; // BankAccountWhereInput
    some?: NexusGenInputs['BankAccountWhereInput'] | null; // BankAccountWhereInput
  }
  BankAccountWhereInput: { // input type
    AND?: NexusGenInputs['BankAccountWhereInput'][] | null; // [BankAccountWhereInput!]
    Bank?: NexusGenInputs['BankWhereInput'] | null; // BankWhereInput
    ListBankAcc?: NexusGenInputs['RegisterListRelationFilter'] | null; // RegisterListRelationFilter
    NOT?: NexusGenInputs['BankAccountWhereInput'][] | null; // [BankAccountWhereInput!]
    OR?: NexusGenInputs['BankAccountWhereInput'][] | null; // [BankAccountWhereInput!]
    bankId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    bankName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    number?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  BankAccountWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  BankCreateOneWithoutBankAccountInput: { // input type
    connect?: NexusGenInputs['BankWhereUniqueInput'] | null; // BankWhereUniqueInput
    connectOrCreate?: NexusGenInputs['BankCreateOrConnectWithoutBankAccountInput'] | null; // BankCreateOrConnectWithoutBankAccountInput
    create?: NexusGenInputs['BankCreateWithoutBankAccountInput'] | null; // BankCreateWithoutBankAccountInput
  }
  BankCreateOrConnectWithoutBankAccountInput: { // input type
    create: NexusGenInputs['BankCreateWithoutBankAccountInput']; // BankCreateWithoutBankAccountInput!
    where: NexusGenInputs['BankWhereUniqueInput']; // BankWhereUniqueInput!
  }
  BankCreateWithoutBankAccountInput: { // input type
    nameFull: string; // String!
    nameShort: string; // String!
  }
  BankWhereInput: { // input type
    AND?: NexusGenInputs['BankWhereInput'][] | null; // [BankWhereInput!]
    BankAccount?: NexusGenInputs['BankAccountListRelationFilter'] | null; // BankAccountListRelationFilter
    NOT?: NexusGenInputs['BankWhereInput'][] | null; // [BankWhereInput!]
    OR?: NexusGenInputs['BankWhereInput'][] | null; // [BankWhereInput!]
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    nameFull?: NexusGenInputs['StringFilter'] | null; // StringFilter
    nameShort?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  BankWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  BonusCreateOneWithoutRegisterInput: { // input type
    connect?: NexusGenInputs['BonusWhereUniqueInput'] | null; // BonusWhereUniqueInput
    connectOrCreate?: NexusGenInputs['BonusCreateOrConnectWithoutRegisterInput'] | null; // BonusCreateOrConnectWithoutRegisterInput
    create?: NexusGenInputs['BonusCreateWithoutRegisterInput'] | null; // BonusCreateWithoutRegisterInput
  }
  BonusCreateOrConnectWithoutRegisterInput: { // input type
    create: NexusGenInputs['BonusCreateWithoutRegisterInput']; // BonusCreateWithoutRegisterInput!
    where: NexusGenInputs['BonusWhereUniqueInput']; // BonusWhereUniqueInput!
  }
  BonusCreateWithoutRegisterInput: { // input type
    accept_condition: string; // String!
  }
  BonusWhereInput: { // input type
    AND?: NexusGenInputs['BonusWhereInput'][] | null; // [BonusWhereInput!]
    NOT?: NexusGenInputs['BonusWhereInput'][] | null; // [BonusWhereInput!]
    OR?: NexusGenInputs['BonusWhereInput'][] | null; // [BonusWhereInput!]
    Register?: NexusGenInputs['RegisterListRelationFilter'] | null; // RegisterListRelationFilter
    accept_condition?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
  }
  BonusWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  IntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntFilter'] | null; // NestedIntFilter
    notIn?: number[] | null; // [Int!]
  }
  NestedIntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntFilter'] | null; // NestedIntFilter
    notIn?: number[] | null; // [Int!]
  }
  NestedStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  NestedStringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  RegisterCreateInput: { // input type
    BankAccount: NexusGenInputs['BankAccountCreateOneWithoutListBankAccInput']; // BankAccountCreateOneWithoutListBankAccInput!
    Bonus: NexusGenInputs['BonusCreateOneWithoutRegisterInput']; // BonusCreateOneWithoutRegisterInput!
    firstName: string; // String!
    lastName?: string | null; // String
    lineId: string; // String!
    password: string; // String!
    phone: string; // String!
  }
  RegisterCreateManyWithoutBankAccountInput: { // input type
    connect?: NexusGenInputs['RegisterWhereUniqueInput'][] | null; // [RegisterWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['RegisterCreateOrConnectWithoutBankAccountInput'][] | null; // [RegisterCreateOrConnectWithoutBankAccountInput!]
    create?: NexusGenInputs['RegisterCreateWithoutBankAccountInput'][] | null; // [RegisterCreateWithoutBankAccountInput!]
  }
  RegisterCreateOrConnectWithoutBankAccountInput: { // input type
    create: NexusGenInputs['RegisterCreateWithoutBankAccountInput']; // RegisterCreateWithoutBankAccountInput!
    where: NexusGenInputs['RegisterWhereUniqueInput']; // RegisterWhereUniqueInput!
  }
  RegisterCreateWithoutBankAccountInput: { // input type
    Bonus: NexusGenInputs['BonusCreateOneWithoutRegisterInput']; // BonusCreateOneWithoutRegisterInput!
    firstName: string; // String!
    lastName?: string | null; // String
    lineId: string; // String!
    password: string; // String!
    phone: string; // String!
  }
  RegisterListRelationFilter: { // input type
    every?: NexusGenInputs['RegisterWhereInput'] | null; // RegisterWhereInput
    none?: NexusGenInputs['RegisterWhereInput'] | null; // RegisterWhereInput
    some?: NexusGenInputs['RegisterWhereInput'] | null; // RegisterWhereInput
  }
  RegisterWhereInput: { // input type
    AND?: NexusGenInputs['RegisterWhereInput'][] | null; // [RegisterWhereInput!]
    BankAccount?: NexusGenInputs['BankAccountWhereInput'] | null; // BankAccountWhereInput
    Bonus?: NexusGenInputs['BonusWhereInput'] | null; // BonusWhereInput
    NOT?: NexusGenInputs['RegisterWhereInput'][] | null; // [RegisterWhereInput!]
    OR?: NexusGenInputs['RegisterWhereInput'][] | null; // [RegisterWhereInput!]
    bankAccountId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    bonusId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    firstName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    lastName?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    lineId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    password?: NexusGenInputs['StringFilter'] | null; // StringFilter
    phone?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  RegisterWhereUniqueInput: { // input type
    id?: number | null; // Int
    phone?: string | null; // String
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  StringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
}

export interface NexusGenEnums {
  QueryMode: "default" | "insensitive"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenRootTypes {
  Bank: { // root type
    id: number; // Int!
    nameFull: string; // String!
    nameShort: string; // String!
  }
  BankAccount: { // root type
    bankId: number; // Int!
    bankName: string; // String!
    id: number; // Int!
    number: string; // String!
  }
  Bonus: { // root type
    accept_condition: string; // String!
    id: number; // Int!
  }
  Mutation: {};
  Query: {};
  Register: { // root type
    firstName: string; // String!
    id: number; // Int!
    lastName?: string | null; // String
    lineId: string; // String!
    password: string; // String!
    phone: string; // String!
  }
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  BankAccountCreateInput: NexusGenInputs['BankAccountCreateInput'];
  BankAccountCreateOneWithoutListBankAccInput: NexusGenInputs['BankAccountCreateOneWithoutListBankAccInput'];
  BankAccountCreateOrConnectWithoutListBankAccInput: NexusGenInputs['BankAccountCreateOrConnectWithoutListBankAccInput'];
  BankAccountCreateWithoutListBankAccInput: NexusGenInputs['BankAccountCreateWithoutListBankAccInput'];
  BankAccountListRelationFilter: NexusGenInputs['BankAccountListRelationFilter'];
  BankAccountWhereInput: NexusGenInputs['BankAccountWhereInput'];
  BankAccountWhereUniqueInput: NexusGenInputs['BankAccountWhereUniqueInput'];
  BankCreateOneWithoutBankAccountInput: NexusGenInputs['BankCreateOneWithoutBankAccountInput'];
  BankCreateOrConnectWithoutBankAccountInput: NexusGenInputs['BankCreateOrConnectWithoutBankAccountInput'];
  BankCreateWithoutBankAccountInput: NexusGenInputs['BankCreateWithoutBankAccountInput'];
  BankWhereInput: NexusGenInputs['BankWhereInput'];
  BankWhereUniqueInput: NexusGenInputs['BankWhereUniqueInput'];
  BonusCreateOneWithoutRegisterInput: NexusGenInputs['BonusCreateOneWithoutRegisterInput'];
  BonusCreateOrConnectWithoutRegisterInput: NexusGenInputs['BonusCreateOrConnectWithoutRegisterInput'];
  BonusCreateWithoutRegisterInput: NexusGenInputs['BonusCreateWithoutRegisterInput'];
  BonusWhereInput: NexusGenInputs['BonusWhereInput'];
  BonusWhereUniqueInput: NexusGenInputs['BonusWhereUniqueInput'];
  IntFilter: NexusGenInputs['IntFilter'];
  NestedIntFilter: NexusGenInputs['NestedIntFilter'];
  NestedStringFilter: NexusGenInputs['NestedStringFilter'];
  NestedStringNullableFilter: NexusGenInputs['NestedStringNullableFilter'];
  RegisterCreateInput: NexusGenInputs['RegisterCreateInput'];
  RegisterCreateManyWithoutBankAccountInput: NexusGenInputs['RegisterCreateManyWithoutBankAccountInput'];
  RegisterCreateOrConnectWithoutBankAccountInput: NexusGenInputs['RegisterCreateOrConnectWithoutBankAccountInput'];
  RegisterCreateWithoutBankAccountInput: NexusGenInputs['RegisterCreateWithoutBankAccountInput'];
  RegisterListRelationFilter: NexusGenInputs['RegisterListRelationFilter'];
  RegisterWhereInput: NexusGenInputs['RegisterWhereInput'];
  RegisterWhereUniqueInput: NexusGenInputs['RegisterWhereUniqueInput'];
  StringFilter: NexusGenInputs['StringFilter'];
  StringNullableFilter: NexusGenInputs['StringNullableFilter'];
  QueryMode: NexusGenEnums['QueryMode'];
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
}

export interface NexusGenFieldTypes {
  Bank: { // field return type
    id: number; // Int!
    nameFull: string; // String!
    nameShort: string; // String!
  }
  BankAccount: { // field return type
    bankId: number; // Int!
    bankName: string; // String!
    id: number; // Int!
    number: string; // String!
  }
  Bonus: { // field return type
    accept_condition: string; // String!
    id: number; // Int!
  }
  Mutation: { // field return type
    createOneBankAccount: NexusGenRootTypes['BankAccount']; // BankAccount!
    createOneRegister: NexusGenRootTypes['Register']; // Register!
  }
  Query: { // field return type
    bankAccount: NexusGenRootTypes['BankAccount'] | null; // BankAccount
    register: NexusGenRootTypes['Register'] | null; // Register
    registers: NexusGenRootTypes['Register'][]; // [Register!]!
  }
  Register: { // field return type
    firstName: string; // String!
    id: number; // Int!
    lastName: string | null; // String
    lineId: string; // String!
    password: string; // String!
    phone: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Bank: { // field return type name
    id: 'Int'
    nameFull: 'String'
    nameShort: 'String'
  }
  BankAccount: { // field return type name
    bankId: 'Int'
    bankName: 'String'
    id: 'Int'
    number: 'String'
  }
  Bonus: { // field return type name
    accept_condition: 'String'
    id: 'Int'
  }
  Mutation: { // field return type name
    createOneBankAccount: 'BankAccount'
    createOneRegister: 'Register'
  }
  Query: { // field return type name
    bankAccount: 'BankAccount'
    register: 'Register'
    registers: 'Register'
  }
  Register: { // field return type name
    firstName: 'String'
    id: 'Int'
    lastName: 'String'
    lineId: 'String'
    password: 'String'
    phone: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createOneBankAccount: { // args
      data: NexusGenInputs['BankAccountCreateInput']; // BankAccountCreateInput!
    }
    createOneRegister: { // args
      data: NexusGenInputs['RegisterCreateInput']; // RegisterCreateInput!
    }
  }
  Query: {
    bankAccount: { // args
      where: NexusGenInputs['BankAccountWhereUniqueInput']; // BankAccountWhereUniqueInput!
    }
    register: { // args
      where: NexusGenInputs['RegisterWhereUniqueInput']; // RegisterWhereUniqueInput!
    }
    registers: { // args
      after?: NexusGenInputs['RegisterWhereUniqueInput'] | null; // RegisterWhereUniqueInput
      before?: NexusGenInputs['RegisterWhereUniqueInput'] | null; // RegisterWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      where?: NexusGenInputs['RegisterWhereInput'] | null; // RegisterWhereInput
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Bank" | "BankAccount" | "Bonus" | "Mutation" | "Query" | "Register";

export type NexusGenInputNames = "BankAccountCreateInput" | "BankAccountCreateOneWithoutListBankAccInput" | "BankAccountCreateOrConnectWithoutListBankAccInput" | "BankAccountCreateWithoutListBankAccInput" | "BankAccountListRelationFilter" | "BankAccountWhereInput" | "BankAccountWhereUniqueInput" | "BankCreateOneWithoutBankAccountInput" | "BankCreateOrConnectWithoutBankAccountInput" | "BankCreateWithoutBankAccountInput" | "BankWhereInput" | "BankWhereUniqueInput" | "BonusCreateOneWithoutRegisterInput" | "BonusCreateOrConnectWithoutRegisterInput" | "BonusCreateWithoutRegisterInput" | "BonusWhereInput" | "BonusWhereUniqueInput" | "IntFilter" | "NestedIntFilter" | "NestedStringFilter" | "NestedStringNullableFilter" | "RegisterCreateInput" | "RegisterCreateManyWithoutBankAccountInput" | "RegisterCreateOrConnectWithoutBankAccountInput" | "RegisterCreateWithoutBankAccountInput" | "RegisterListRelationFilter" | "RegisterWhereInput" | "RegisterWhereUniqueInput" | "StringFilter" | "StringNullableFilter";

export type NexusGenEnumNames = "QueryMode";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}